{"version":3,"sources":["components/GetWeather.js","components/Forecast.js","components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["api_key","GetWeather","query","a","axios","get","params","q","units","APPID","data","GetDayWise","FiveDayCast","setDay","setCity","setActive","city","useState","setQuery","weather","setWeather","loadWeather","console","log","useEffect","Search","e","key","type","className","placeholder","value","onChange","target","onKeyPress","list","filter","item","dt_txt","split","map","onClick","cardClicked","main","temp_min","temp_max","src","icon","alt","description","name","country","Daycast","day","temp","feels_like","humidity","pressure","wind","speed","withRouter","active","Home","Delhi","setDelhi","Mumbai","setMumbai","Bengaluru","setBengaluru","Kolkata","setKolkata","Weatherdata","WeatherDelhi","WeatherMumbai","WeatherBengaluru","WeatherKolkata","id","data-bs-ride","data-bs-target","data-bs-slide-to","href","role","data-bs-slide","PageFooter","App","to","width","height","class","data-bs-toggle","aria-controls","aria-expanded","aria-label","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9232325e.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst URL_FORECAST = 'https://api.openweathermap.org/data/2.5/forecast'\r\nconst URL_DETAIL = 'https://api.openweathermap.org/data/2.5/weather'\r\n//key->f42dc105cd0c9ddeab9066c3fcaf37a9\r\nconst api_key ='f42dc105cd0c9ddeab9066c3fcaf37a9'\r\nconst GetWeather = async(query) => {\r\n    const {data} = await axios.get(URL_FORECAST,{\r\n        params:{\r\n            q:query,\r\n            units: 'metric',\r\n            APPID: api_key,\r\n        }\r\n    })\r\n    return data\r\n}\r\nconst GetDayWise = async(query) => {\r\n    const {data} = await axios.get(URL_DETAIL,{\r\n        params:{\r\n            q:query,\r\n            units: 'metric',\r\n            APPID: api_key,\r\n        }\r\n    })\r\n    return data\r\n}\r\n\r\nexport  {GetDayWise,GetWeather};","import React, { useState, useEffect } from 'react'\r\nimport { GetWeather } from './GetWeather.js'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nconst Forecast = () => {\r\n    const [active, setActive] = useState(\"forecast\")\r\n    const [day, setDay] = useState([])\r\n    const [city, setCity] = useState('delhi')\r\n    return (\r\n        <div>\r\n            {active === \"forecast\" && <FiveDayCast setDay={setDay} setCity={setCity} setActive={setActive} city={city} />}\r\n            {active === \"daycast\" && <Daycast day={day} city={city} setActive={setActive} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst FiveDayCast = ({ setDay, setCity, setActive, city }) => {\r\n\r\n    const [query, setQuery] = useState(city)\r\n    const [weather, setWeather] = useState({})\r\n\r\n    const loadWeather = async (query) => {\r\n        console.log(query);\r\n        const data = await GetWeather(query)\r\n        setWeather(data)\r\n        setCity(query)\r\n    }\r\n    useEffect(() => {\r\n        city === \"\" && setCity(\"delhi\")\r\n        //console.log(1);\r\n        loadWeather(city)\r\n        //console.log(weather);\r\n\r\n\r\n    }, [])\r\n\r\n    const Search = async (e) => {\r\n        if (e.key === 'Enter') {\r\n            loadWeather(query)\r\n\r\n        }\r\n    }\r\n    const cardClicked = (e, item) => {\r\n        setDay(item)\r\n        console.log(item)\r\n\r\n        setActive(\"daycast\")\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <header>\r\n                <input type=\"text\" className=\"form-control search-box\" placeholder=\"Please Enter City Name...\" value={query} onChange={(e) => setQuery(e.target.value)}\r\n                    onKeyPress={Search} />\r\n            </header>\r\n            <main>\r\n                <div className=\"row mb-3 text-center main-area\">\r\n                    {weather.list && weather.list.filter((item) => item.dt_txt.split(' ')[1] === '12:00:00').map((item, key) => (\r\n\r\n                        <div className=\"card col-lg-2 col-md-3 col-sm-6\"\r\n                            onClick={(e) => cardClicked(e, weather.list.filter((e) => e.dt_txt.split(' ')[0] === item.dt_txt.split(' ')[0]))}\r\n                            key={key}>\r\n                            <div className=\"card-header\" >\r\n                                <h3>\r\n                                    {item.dt_txt.split(' ')[0]}\r\n\r\n                                </h3>\r\n                                <div>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"card-body\" >\r\n                                <div className=\"row\">\r\n                                    <span>\r\n                                        {item.main.temp_min}\r\n                                        <sup>o</sup>\r\n                                        <strong>-</strong>\r\n\r\n                                        {item.main.temp_max}\r\n                                        <sup>o</sup>\r\n                                    </span>\r\n\r\n                                </div>\r\n                                <div>\r\n                                    <img className=\"city-icon\" src={'https://openweathermap.org/img/wn/' + `${item.weather[0].icon}` + '@2x.png'} alt={item.weather[0].description} />\r\n                                    <p>{item.weather[0].description}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"card-footer\">\r\n                                <h2>\r\n                                    <span>{weather.city.name},</span>\r\n                                    {weather.city.country}\r\n                                </h2>\r\n                            </div>\r\n                        </div>\r\n\r\n                    )\r\n                    )}\r\n                </div>\r\n            </main>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nconst Daycast = ({ day, city, setActive }) => {\r\n\r\n    const goBack = () => {\r\n        setActive(\"forecast\")\r\n    }\r\n    return (\r\n        <>\r\n            {day &&\r\n\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"card card-custom card-back col-md-5\" onClick={goBack}>\r\n                        <div className=\"card-header\" >\r\n                            <h3>\r\n                                {city}\r\n\r\n                            </h3>\r\n                            <div>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                                <h1>\r\n                                    {day[0].main.temp}\r\n                                    <sup>o</sup>\r\n                                </h1>\r\n                            </div>\r\n                            <div>\r\n                                <img className=\"city-icon\" src={'https://openweathermap.org/img/wn/' + `${day[0].weather[0].icon}` + '@2x.png'} alt={day[0].weather[0].description} />\r\n                                <p>{day[0].weather[0].description}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card-footer\">\r\n                            <h2><span>{day[0].dt_txt.split(' ')[0]}</span>\r\n                            </h2>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card card-custom col-md-5\">\r\n                        <div className=\"card-header\">\r\n                            Detailed Weather\r\n                        </div>\r\n                        <div className=\"card-body card-detail\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-6\">\r\n                                    <h2>Temprature: </h2>\r\n                                </div>\r\n                                <div className=\"col-6\">\r\n                                    {day[0].main.temp}\r\n                                    <sup>o</sup>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-6\">\r\n                                    <h2>Feels Like: </h2>\r\n                                </div>\r\n                                <div className=\"col-6\">\r\n                                    {day[0].main.feels_like}\r\n                                    <sup>o</sup>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-6\">\r\n                                    <h2>Humidity: </h2>\r\n                                </div>\r\n                                <div className=\"col-6\">\r\n                                    {day[0].main.humidity}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-6\">\r\n                                    <h2>Pressure: </h2>\r\n                                </div>\r\n                                <div className=\"col-6\">\r\n                                    {day[0].main.pressure}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-6\">\r\n                                    <h2>Wind: </h2>\r\n                                </div>\r\n                                <div className=\"col-6\">\r\n                                    {day[0].wind.speed}Km/h\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default withRouter(Forecast)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { GetDayWise } from './GetWeather'\r\n\r\nconst Home = () => {\r\n    const [Delhi, setDelhi] = useState({})\r\n    const [Mumbai, setMumbai] = useState({})\r\n    const [Bengaluru, setBengaluru] = useState({})\r\n    const [Kolkata, setKolkata] = useState({})\r\n    const Weatherdata = async () => {\r\n        const WeatherDelhi = await GetDayWise('delhi')\r\n        setDelhi(WeatherDelhi)\r\n        const WeatherMumbai = await GetDayWise('mumbai')\r\n        setMumbai(WeatherMumbai)\r\n        const WeatherBengaluru = await GetDayWise('bengaluru')\r\n        setBengaluru(WeatherBengaluru)\r\n        const WeatherKolkata = await GetDayWise('kolkata')\r\n        setKolkata(WeatherKolkata)\r\n    }\r\n    useEffect(() => {\r\n        Weatherdata();\r\n    }, [])\r\n    return (\r\n        <div>\r\n            <div id=\"carousel-main\" className=\"carousel slide main-area font-lg\" data-bs-ride=\"false\">\r\n                <ol className=\"carousel-indicators\">\r\n                    <li data-bs-target=\"#carousel-main\" data-bs-slide-to=\"0\" className=\"active\"></li>\r\n                    <li data-bs-target=\"#carousel-main\" data-bs-slide-to=\"1\"></li>\r\n                    <li data-bs-target=\"#carousel-main\" data-bs-slide-to=\"2\"></li>\r\n                    <li data-bs-target=\"#carousel-main\" data-bs-slide-to=\"3\"></li>\r\n\r\n                </ol>\r\n                <div className=\"carousel-inner\">\r\n                    <div className=\"carousel-item active\">\r\n                        {Delhi.main && (\r\n                            <div className=\"w-block\">\r\n                                <h2>{Delhi.main.temp}\r\n                                    <sup>o</sup>\r\n                                </h2>\r\n                                <img className=\"city-icon\" src={'https://openweathermap.org/img/wn/' + `${Delhi.weather[0].icon}` + '@2x.png'} alt={Delhi.weather[0].description} />\r\n                                <p>{Delhi.weather[0].description}</p>\r\n                                <h1>\r\n                                    Delhi, India\r\n                                </h1>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"carousel-item\">\r\n                        {Bengaluru.main && (\r\n                            <div className=\"w-block\">\r\n                                <h2>{Bengaluru.main.temp}\r\n                                    <sup>o</sup>\r\n                                </h2>\r\n                                <img className=\"city-icon\" src={'https://openweathermap.org/img/wn/' + `${Bengaluru.weather[0].icon}` + '@2x.png'} alt={Bengaluru.weather[0].description} />\r\n                                <p>{Bengaluru.weather[0].description}</p>\r\n                                <h1>\r\n                                    Bengaluru, India\r\n                                </h1>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"carousel-item\">\r\n                        {Kolkata.main && (\r\n                            <div className=\"w-block\">\r\n                                <h2>{Kolkata.main.temp}\r\n                                    <sup>o</sup>\r\n                                </h2>\r\n                                <img className=\"city-icon\" src={'https://openweathermap.org/img/wn/' + `${Kolkata.weather[0].icon}` + '@2x.png'} alt={Kolkata.weather[0].description} />\r\n                                <p>{Kolkata.weather[0].description}</p>\r\n                                <h1>\r\n                                    Kolkata, India\r\n                                </h1>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"carousel-item\">\r\n                        {Mumbai.main && (\r\n                            <div className=\"w-block\">\r\n                                <h2>{Mumbai.main.temp}\r\n                                    <sup>o</sup>\r\n                                </h2>\r\n                                <img className=\"city-icon\" src={'https://openweathermap.org/img/wn/' + `${Mumbai.weather[0].icon}` + '@2x.png'} alt={Mumbai.weather[0].description} />\r\n                                <p>{Mumbai.weather[0].description}</p>\r\n                                <h1>\r\n                                    Mumbai, India\r\n                                </h1>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n\r\n                </div>\r\n                <a className=\"carousel-control-prev\" href=\"#carousel-main\" role=\"button\" data-bs-slide=\"prev\">\r\n                    <span className=\"carousel-control-prev-icon\"></span>\r\n\r\n                </a>\r\n                <a className=\"carousel-control-next\" href=\"#carousel-main\" role=\"button\" data-bs-slide=\"next\">\r\n                    <span className=\"carousel-control-next-icon\"></span>\r\n\r\n                </a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\nimport { BrowserRouter, Switch, Link, Route, HashRouter as Router } from 'react-router-dom'\nimport Forecast from './components/Forecast'\nimport Home from \"./components/Home\";\n\nconst App = () => {\n\n\n\n  //const iconurl = 'https://openweathermap.org/img/wn/'+`${weather.weather[0].icon}`+'@2x.png'\n  return (\n    <Router>\n      <nav className=\"navbar navbar-expand-lg navbar-light\">\n        <div className=\"container-fluid\">\n          <Link to='/' className=\"navbar-brand font-header\">\n            <img className=\"d-inline-block align-text-top\" src={'https://openweathermap.org/img/wn/02d@2x.png'} width=\"50\" height=\"40\" alt=\"\" />\n            <strong> Weather</strong>\n          </Link>\n          <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span class=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n              <li className=\"nav-item\">\n                <Link to='/forecast' className=\"nav-link font-lg\">5-Day Forecast</Link>\n              </li>\n              \n            </ul>\n          </div>\n        </div>\n      </nav>\n      <PageFooter/>\n      <Switch>\n        <Route exact path=\"/\" >\n          <Home/>\n          </Route>\n        <Route  path=\"/Forecast\">\n          <Forecast />\n        </Route>\n        \n      </Switch>\n    </Router>\n  );\n}\nconst PageFooter=()=>{\n  return (\n    <div className=\"footer\">\n      <div><a href=\"mailto:kandpalbharat83@gmail.com\" className=\"footer-w\">Bharat Kandpal</a></div>\n      <div>Contact: 8191960391</div>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}