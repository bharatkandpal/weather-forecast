{"version":3,"sources":["components/GetWeather.js","components/Daycast.js","components/Forecast.js","components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["api_key","GetWeather","query","a","axios","get","params","q","units","APPID","data","GetDayWise","console","log","Daycast","day","city","className","main","temp","src","weather","icon","alt","description","dt_txt","split","feels_like","humidity","pressure","wind","speed","FiveDayCast","setDay","setCity","setActive","useState","setQuery","setWeather","Search","e","key","target","value","type","placeholder","onChange","onKeyPress","list","filter","item","map","onClick","cardClicked","name","country","withRouter","active","Home","Delhi","setDelhi","Mumbai","setMumbai","Bengaluru","setBengaluru","Kolkata","setKolkata","Weatherdata","WeatherDelhi","WeatherMumbai","WeatherBengaluru","WeatherKolkata","useEffect","id","data-bs-ride","data-bs-target","data-bs-slide-to","href","role","data-bs-slide","PageFooter","App","to","width","height","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQAKMA,EAAS,mCACTC,EAAU,uCAAG,WAAMC,GAAN,iBAAAC,EAAA,sEACMC,IAAMC,IALV,kDAK2B,CACxCC,OAAO,CACHC,EAAEL,EACFM,MAAO,SACPC,MAAOT,KALA,uBACRU,EADQ,EACRA,KADQ,kBAQRA,GARQ,2CAAH,sDAUVC,EAAU,uCAAG,WAAMT,GAAN,iBAAAC,EAAA,sEACMC,IAAMC,IAdZ,iDAc2B,CACtCC,OAAO,CACHC,EAAEL,EACFM,MAAO,SACPC,MAAOT,KALA,uBACRU,EADQ,EACRA,KAOPE,QAAQC,IAAIH,GARG,kBASRA,GATQ,2CAAH,sD,OC4EDI,EA3FC,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,IAAKC,EAAW,EAAXA,KAEpB,OACI,mCACKD,GACG,qBAAKE,UAAU,cAAf,SAEI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,4BAAf,UACI,sBAAKA,UAAU,cAAf,UACI,6BACKD,IAGL,2BAIJ,sBAAKC,UAAU,YAAf,UACI,qBAAKA,UAAU,MAAf,SACI,+BACKF,EAAIG,KAAKC,KACV,yCAGR,gCACI,qBAAKF,UAAU,YAAYG,IAAK,+CAA0CL,EAAIM,QAAQ,GAAGC,MAAS,UAAWC,IAAKR,EAAIM,QAAQ,GAAGG,cACjI,4BAAIT,EAAIM,QAAQ,GAAGG,oBAG3B,qBAAKP,UAAU,cAAf,SACI,6BAAI,+BAAOF,EAAIU,OAAOC,MAAM,KAAK,YAIzC,sBAAKT,UAAU,4BAAf,UACI,qBAAKA,UAAU,cAAf,8BAGA,sBAAKA,UAAU,wBAAf,UACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,QAAf,SACI,gDAEJ,sBAAKA,UAAU,QAAf,UACKF,EAAIG,KAAKC,KACV,0CAGR,sBAAKF,UAAU,MAAf,UACI,qBAAKA,UAAU,QAAf,SACI,gDAEJ,sBAAKA,UAAU,QAAf,UACKF,EAAIG,KAAKS,WACV,0CAGR,sBAAKV,UAAU,MAAf,UACI,qBAAKA,UAAU,QAAf,SACI,8CAEJ,qBAAKA,UAAU,QAAf,SACKF,EAAIG,KAAKU,cAGlB,sBAAKX,UAAU,MAAf,UACI,qBAAKA,UAAU,QAAf,SACI,8CAEJ,qBAAKA,UAAU,QAAf,SACKF,EAAIG,KAAKW,cAGlB,sBAAKZ,UAAU,MAAf,UACI,qBAAKA,UAAU,QAAf,SACI,0CAEJ,sBAAKA,UAAU,QAAf,UACKF,EAAIe,KAAKC,MADd,2BC9D9BC,EAAc,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,OAAQC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,UAEpC,EAA0BC,mBAAS,IAAnC,mBAAOlC,EAAP,KAAcmC,EAAd,KACA,EAA8BD,mBAAS,IAAvC,mBAAOf,EAAP,KAAgBiB,EAAhB,KAGMC,EAAM,uCAAG,WAAOC,GAAP,eAAArC,EAAA,yDACG,UAAVqC,EAAEC,IADK,gCAEYxC,EAAWC,GAFvB,OAEDQ,EAFC,OAGP4B,EAAW5B,GACXwB,EAAQM,EAAEE,OAAOC,OAJV,2CAAH,sDAeZ,OACI,qCACI,iCACI,uBAAOC,KAAK,OAAO3B,UAAU,0BAA0B4B,YAAY,4BAA4BF,MAAOzC,EAAO4C,SAAU,SAACN,GAAD,OAAOH,EAASG,EAAEE,OAAOC,QAC5II,WAAYR,MAEpB,+BACI,qBAAKtB,UAAU,iCAAf,SACKI,EAAQ2B,MAAQ3B,EAAQ2B,KAAKC,QAAO,SAACC,GAAD,MAAwC,aAA9BA,EAAKzB,OAAOC,MAAM,KAAK,MAAmByB,KAAI,SAACD,GAAD,OAEzF,sBAAKjC,UAAU,kCAAkCmC,QAAS,SAACZ,GAAD,OAjB1D,SAACA,EAAGU,GACpBtC,QAAQC,IAAI2B,GACZ5B,QAAQC,IAAIqC,GACZjB,EAAOiB,GACPf,EAAU,WAauEkB,CAAYb,EAAGU,IAAhF,UACI,sBAAKjC,UAAU,cAAf,UACI,6BACKiC,EAAKzB,OAAOC,MAAM,KAAK,KAG5B,2BAIJ,sBAAKT,UAAU,YAAf,UACI,qBAAKA,UAAU,MAAf,SACI,+BACKiC,EAAKhC,KAAKC,KACX,yCAGR,gCACI,qBAAKF,UAAU,YAAYG,IAAK,+CAA0C8B,EAAK7B,QAAQ,GAAGC,MAAS,UAAWC,IAAK2B,EAAK7B,QAAQ,GAAGG,cACnI,4BAAI0B,EAAK7B,QAAQ,GAAGG,oBAG5B,qBAAKP,UAAU,cAAf,SACI,+BACI,iCAAOI,EAAQL,KAAKsC,KAApB,OACCjC,EAAQL,KAAKuC,2BAcnCC,eAlFE,WACb,MAA4BpB,mBAAS,YAArC,mBAAOqB,EAAP,KAAetB,EAAf,KACA,EAAsBC,mBAAS,IAA/B,mBAAOrB,EAAP,KAAYkB,EAAZ,KACA,EAAwBG,mBAAS,IAAjC,mBAAOpB,EAAP,KAAakB,EAAb,KACA,OACI,gCACgB,aAAXuB,GAAyB,cAAC,EAAD,CAAaxB,OAAQA,EAAQC,QAASA,EAASC,UAAWA,IACxE,YAAXsB,GAAwB,cAAC,EAAD,CAAS1C,IAAKA,EAAKC,KAAMA,UC4F/C0C,EArGF,WACT,MAA0BtB,mBAAS,IAAnC,mBAAOuB,EAAP,KAAcC,EAAd,KACA,EAA4BxB,mBAAS,IAArC,mBAAOyB,EAAP,KAAeC,EAAf,KACA,EAAkC1B,mBAAS,IAA3C,mBAAO2B,EAAP,KAAkBC,EAAlB,KACA,EAA8B5B,mBAAS,IAAvC,mBAAO6B,EAAP,KAAgBC,EAAhB,KACMC,EAAW,uCAAG,kCAAAhE,EAAA,sEACWQ,EAAW,SADtB,cACVyD,EADU,OAEhBR,EAASQ,GAFO,SAGYzD,EAAW,UAHvB,cAGV0D,EAHU,OAIhBP,EAAUO,GAJM,UAKe1D,EAAW,aAL1B,eAKV2D,EALU,OAMhBN,EAAaM,GANG,UAOa3D,EAAW,WAPxB,QAOV4D,EAPU,OAQhBL,EAAWK,GACX3D,QAAQC,IAAI8C,GATI,4CAAH,qDAcjB,OAHAa,qBAAU,WACNL,MACD,IAEC,8BACI,sBAAKM,GAAG,gBAAgBxD,UAAU,mCAAmCyD,eAAa,QAAlF,UACI,qBAAIzD,UAAU,sBAAd,UACI,oBAAI0D,iBAAe,iBAAiBC,mBAAiB,IAAI3D,UAAU,WACnE,oBAAI0D,iBAAe,iBAAiBC,mBAAiB,MACrD,oBAAID,iBAAe,iBAAiBC,mBAAiB,MACrD,oBAAID,iBAAe,iBAAiBC,mBAAiB,SAGzD,sBAAK3D,UAAU,iBAAf,UACI,qBAAKA,UAAU,uBAAf,SACK0C,EAAMzC,MACH,sBAAKD,UAAU,UAAf,UACI,+BAAK0C,EAAMzC,KAAKC,KACZ,uCAEJ,qBAAKF,UAAU,YAAYG,IAAK,+CAA0CuC,EAAMtC,QAAQ,GAAGC,MAAS,UAAWC,IAAKoC,EAAMtC,QAAQ,GAAGG,cACrI,4BAAImC,EAAMtC,QAAQ,GAAGG,cACrB,mDAMZ,qBAAKP,UAAU,gBAAf,SACK8C,EAAU7C,MACP,sBAAKD,UAAU,UAAf,UACI,+BAAK8C,EAAU7C,KAAKC,KAChB,uCAEJ,qBAAKF,UAAU,YAAYG,IAAK,+CAA0C2C,EAAU1C,QAAQ,GAAGC,MAAS,UAAWC,IAAKwC,EAAU1C,QAAQ,GAAGG,cAC7I,4BAAIuC,EAAU1C,QAAQ,GAAGG,cACzB,uDAMZ,qBAAKP,UAAU,gBAAf,SACKgD,EAAQ/C,MACL,sBAAKD,UAAU,UAAf,UACI,+BAAKgD,EAAQ/C,KAAKC,KACd,uCAEJ,qBAAKF,UAAU,YAAYG,IAAK,+CAA0C6C,EAAQ5C,QAAQ,GAAGC,MAAS,UAAWC,IAAK0C,EAAQ5C,QAAQ,GAAGG,cACzI,4BAAIyC,EAAQ5C,QAAQ,GAAGG,cACvB,qDAMZ,qBAAKP,UAAU,gBAAf,SACK4C,EAAO3C,MACJ,sBAAKD,UAAU,UAAf,UACI,+BAAK4C,EAAO3C,KAAKC,KACb,uCAEJ,qBAAKF,UAAU,YAAYG,IAAK,+CAA0CyC,EAAOxC,QAAQ,GAAGC,MAAS,UAAWC,IAAKsC,EAAOxC,QAAQ,GAAGG,cACvI,4BAAIqC,EAAOxC,QAAQ,GAAGG,cACtB,uDAQhB,mBAAGP,UAAU,wBAAwB4D,KAAK,iBAAiBC,KAAK,SAASC,gBAAc,OAAvF,SACI,sBAAM9D,UAAU,iCAGpB,mBAAGA,UAAU,wBAAwB4D,KAAK,iBAAiBC,KAAK,SAASC,gBAAc,OAAvF,SACI,sBAAM9D,UAAU,uCCvD9B+D,EAAW,WACf,OACE,sBAAK/D,UAAU,SAAf,UACE,8BAAK,mBAAG4D,KAAK,mCAAmC5D,UAAU,WAArD,8BACL,0DAKSgE,EA7CH,WAKV,OACE,eAAC,IAAD,WACE,qBAAKhE,UAAU,uCAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,eAAC,IAAD,CAAMiE,GAAG,IAAIjE,UAAU,2BAAvB,UACE,qBAAKA,UAAU,gCAAgCG,IAAK,+CAAgD+D,MAAM,KAAKC,OAAO,KAAK7D,IAAI,KAC/H,iDAEF,qBAAKN,UAAU,2BAA2BwD,GAAG,yBAA7C,SACE,oBAAIxD,UAAU,kCAAd,SACE,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAAMiE,GAAG,YAAYjE,UAAU,mBAA/B,uCAOV,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOoE,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAQA,KAAK,YAAb,SACE,cAAC,EAAD,aCtBKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.99a97d3b.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst URL_FORECAST = 'http://api.openweathermap.org/data/2.5/forecast'\r\nconst URL_DETAIL = 'http://api.openweathermap.org/data/2.5/weather'\r\n//key->f42dc105cd0c9ddeab9066c3fcaf37a9\r\nconst api_key ='f42dc105cd0c9ddeab9066c3fcaf37a9'\r\nconst GetWeather = async(query) => {\r\n    const {data} = await axios.get(URL_FORECAST,{\r\n        params:{\r\n            q:query,\r\n            units: 'metric',\r\n            APPID: api_key,\r\n        }\r\n    })\r\n    return data\r\n}\r\nconst GetDayWise = async(query) => {\r\n    const {data} = await axios.get(URL_DETAIL,{\r\n        params:{\r\n            q:query,\r\n            units: 'metric',\r\n            APPID: api_key,\r\n        }\r\n    })\r\n    console.log(data);\r\n    return data\r\n}\r\n\r\nexport  {GetDayWise,GetWeather};","import React from 'react'\r\nconst Daycast = ({ day, city }) => {\r\n\r\n    return (\r\n        <>\r\n            {day &&\r\n                <div className=\"box font-lg\">\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"card card-custom col-md-5\" >\r\n                            <div className=\"card-header\" >\r\n                                <h3>\r\n                                    {city}\r\n\r\n                                </h3>\r\n                                <div>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <div className=\"row\">\r\n                                    <h1>\r\n                                        {day.main.temp}\r\n                                        <sup>o</sup>\r\n                                    </h1>\r\n                                </div>\r\n                                <div>\r\n                                    <img className=\"city-icon\" src={'https://openweathermap.org/img/wn/' + `${day.weather[0].icon}` + '@2x.png'} alt={day.weather[0].description} />\r\n                                    <p>{day.weather[0].description}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"card-footer\">\r\n                                <h2><span>{day.dt_txt.split(' ')[0]}</span>\r\n                                </h2>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card card-custom col-md-5\">\r\n                            <div className=\"card-header\">\r\n                                Detailed Weather\r\n                        </div>\r\n                            <div className=\"card-body card-detail\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-6\">\r\n                                        <h2>Temprature: </h2>\r\n                                    </div>\r\n                                    <div className=\"col-6\">\r\n                                        {day.main.temp}\r\n                                        <sup>o</sup>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-6\">\r\n                                        <h2>Feels Like: </h2>\r\n                                    </div>\r\n                                    <div className=\"col-6\">\r\n                                        {day.main.feels_like}\r\n                                        <sup>o</sup>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-6\">\r\n                                        <h2>Humidity: </h2>\r\n                                    </div>\r\n                                    <div className=\"col-6\">\r\n                                        {day.main.humidity}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-6\">\r\n                                        <h2>Pressure: </h2>\r\n                                    </div>\r\n                                    <div className=\"col-6\">\r\n                                        {day.main.pressure}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-6\">\r\n                                        <h2>Wind: </h2>\r\n                                    </div>\r\n                                    <div className=\"col-6\">\r\n                                        {day.wind.speed}Km/h\r\n                                </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Daycast\r\n","import React, { useState } from 'react'\r\nimport { GetWeather } from './GetWeather.js'\r\nimport { withRouter } from 'react-router-dom'\r\nimport Daycast from './Daycast'\r\n\r\nconst Forecast = () => {\r\n    const [active, setActive] = useState(\"forecast\")\r\n    const [day, setDay] = useState({})\r\n    const [city, setCity] = useState('')\r\n    return (\r\n        <div>\r\n            {active === \"forecast\" && <FiveDayCast setDay={setDay} setCity={setCity} setActive={setActive}/>}\r\n            {active === \"daycast\" && <Daycast day={day} city={city}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst FiveDayCast = ({ setDay, setCity, setActive }) => {\r\n\r\n    const [query, setQuery] = useState('')\r\n    const [weather, setWeather] = useState({})\r\n\r\n\r\n    const Search = async (e) => {\r\n        if (e.key === 'Enter') {\r\n            const data = await GetWeather(query)\r\n            setWeather(data)\r\n            setCity(e.target.value)\r\n\r\n        }\r\n    }\r\n    const cardClicked = (e, item) => {\r\n        console.log(e);\r\n        console.log(item);\r\n        setDay(item)\r\n        setActive(\"daycast\")\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <header>\r\n                <input type=\"text\" className=\"form-control search-box\" placeholder=\"Please Enter City Name...\" value={query} onChange={(e) => setQuery(e.target.value)}\r\n                    onKeyPress={Search} />\r\n            </header>\r\n            <main>\r\n                <div className=\"row mb-3 text-center main-area\">\r\n                    {weather.list && weather.list.filter((item) => item.dt_txt.split(' ')[1] === '00:00:00').map((item) => (\r\n\r\n                        <div className=\"card col-lg-2 col-md-3 col-sm-6\" onClick={(e) => cardClicked(e, item)}>\r\n                            <div className=\"card-header\" >\r\n                                <h3>\r\n                                    {item.dt_txt.split(' ')[0]}\r\n\r\n                                </h3>\r\n                                <div>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <div className=\"row\">\r\n                                    <h1>\r\n                                        {item.main.temp}\r\n                                        <sup>o</sup>\r\n                                    </h1>\r\n                                </div>\r\n                                <div>\r\n                                    <img className=\"city-icon\" src={'https://openweathermap.org/img/wn/' + `${item.weather[0].icon}` + '@2x.png'} alt={item.weather[0].description} />\r\n                                    <p>{item.weather[0].description}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"card-footer\">\r\n                                <h2>\r\n                                    <span>{weather.city.name},</span>\r\n                                    {weather.city.country}\r\n                                </h2>\r\n                            </div>\r\n                        </div>\r\n\r\n                    )\r\n                    )}\r\n                </div>\r\n            </main>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default withRouter(Forecast)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { GetDayWise } from './GetWeather'\r\n\r\nconst Home = () => {\r\n    const [Delhi, setDelhi] = useState({})\r\n    const [Mumbai, setMumbai] = useState({})\r\n    const [Bengaluru, setBengaluru] = useState({})\r\n    const [Kolkata, setKolkata] = useState({})\r\n    const Weatherdata = async () => {\r\n        const WeatherDelhi = await GetDayWise('delhi')\r\n        setDelhi(WeatherDelhi)\r\n        const WeatherMumbai = await GetDayWise('mumbai')\r\n        setMumbai(WeatherMumbai)\r\n        const WeatherBengaluru = await GetDayWise('bengaluru')\r\n        setBengaluru(WeatherBengaluru)\r\n        const WeatherKolkata = await GetDayWise('kolkata')\r\n        setKolkata(WeatherKolkata)\r\n        console.log(Delhi);\r\n    }\r\n    useEffect(() => {\r\n        Weatherdata();\r\n    }, [])\r\n    return (\r\n        <div>\r\n            <div id=\"carousel-main\" className=\"carousel slide main-area font-lg\" data-bs-ride=\"false\">\r\n                <ol className=\"carousel-indicators\">\r\n                    <li data-bs-target=\"#carousel-main\" data-bs-slide-to=\"0\" className=\"active\"></li>\r\n                    <li data-bs-target=\"#carousel-main\" data-bs-slide-to=\"1\"></li>\r\n                    <li data-bs-target=\"#carousel-main\" data-bs-slide-to=\"2\"></li>\r\n                    <li data-bs-target=\"#carousel-main\" data-bs-slide-to=\"3\"></li>\r\n\r\n                </ol>\r\n                <div className=\"carousel-inner\">\r\n                    <div className=\"carousel-item active\">\r\n                        {Delhi.main && (\r\n                            <div className=\"w-block\">\r\n                                <h2>{Delhi.main.temp}\r\n                                    <sup>o</sup>\r\n                                </h2>\r\n                                <img className=\"city-icon\" src={'https://openweathermap.org/img/wn/' + `${Delhi.weather[0].icon}` + '@2x.png'} alt={Delhi.weather[0].description} />\r\n                                <p>{Delhi.weather[0].description}</p>\r\n                                <h1>\r\n                                    Delhi, India\r\n                                </h1>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"carousel-item\">\r\n                        {Bengaluru.main && (\r\n                            <div className=\"w-block\">\r\n                                <h2>{Bengaluru.main.temp}\r\n                                    <sup>o</sup>\r\n                                </h2>\r\n                                <img className=\"city-icon\" src={'https://openweathermap.org/img/wn/' + `${Bengaluru.weather[0].icon}` + '@2x.png'} alt={Bengaluru.weather[0].description} />\r\n                                <p>{Bengaluru.weather[0].description}</p>\r\n                                <h1>\r\n                                    Bengaluru, India\r\n                                </h1>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"carousel-item\">\r\n                        {Kolkata.main && (\r\n                            <div className=\"w-block\">\r\n                                <h2>{Kolkata.main.temp}\r\n                                    <sup>o</sup>\r\n                                </h2>\r\n                                <img className=\"city-icon\" src={'https://openweathermap.org/img/wn/' + `${Kolkata.weather[0].icon}` + '@2x.png'} alt={Kolkata.weather[0].description} />\r\n                                <p>{Kolkata.weather[0].description}</p>\r\n                                <h1>\r\n                                    Kolkata, India\r\n                                </h1>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"carousel-item\">\r\n                        {Mumbai.main && (\r\n                            <div className=\"w-block\">\r\n                                <h2>{Mumbai.main.temp}\r\n                                    <sup>o</sup>\r\n                                </h2>\r\n                                <img className=\"city-icon\" src={'https://openweathermap.org/img/wn/' + `${Mumbai.weather[0].icon}` + '@2x.png'} alt={Mumbai.weather[0].description} />\r\n                                <p>{Mumbai.weather[0].description}</p>\r\n                                <h1>\r\n                                    Mumbai, India\r\n                                </h1>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n\r\n                </div>\r\n                <a className=\"carousel-control-prev\" href=\"#carousel-main\" role=\"button\" data-bs-slide=\"prev\">\r\n                    <span className=\"carousel-control-prev-icon\"></span>\r\n\r\n                </a>\r\n                <a className=\"carousel-control-next\" href=\"#carousel-main\" role=\"button\" data-bs-slide=\"next\">\r\n                    <span className=\"carousel-control-next-icon\"></span>\r\n\r\n                </a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\nimport { BrowserRouter as Router, Switch, Link, Route } from 'react-router-dom'\nimport Forecast from './components/Forecast'\nimport Home from \"./components/Home\";\n\nconst App = () => {\n\n\n\n  //const iconurl = 'https://openweathermap.org/img/wn/'+`${weather.weather[0].icon}`+'@2x.png'\n  return (\n    <Router>\n      <nav className=\"navbar navbar-expand-lg navbar-light\">\n        <div className=\"container-fluid\">\n          <Link to='/' className=\"navbar-brand font-header\">\n            <img className=\"d-inline-block align-text-top\" src={'https://openweathermap.org/img/wn/02d@2x.png'} width=\"50\" height=\"40\" alt=\"\" />\n            <strong> Weather</strong>\n          </Link>\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n              <li className=\"nav-item\">\n                <Link to='/forecast' className=\"nav-link font-lg\">5-Day Forecast</Link>\n              </li>\n              \n            </ul>\n          </div>\n        </div>\n      </nav>\n      <PageFooter/>\n      <Switch>\n        <Route exact path=\"/\" >\n          <Home/>\n          </Route>\n        <Route  path=\"/Forecast\">\n          <Forecast />\n        </Route>\n        \n      </Switch>\n    </Router>\n  );\n}\nconst PageFooter=()=>{\n  return (\n    <div className=\"footer\">\n      <div><a href=\"mailto:kandpalbharat83@gmail.com\" className=\"footer-w\">Bharat Kandpal</a></div>\n      <div>Contact: 8191960391</div>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}